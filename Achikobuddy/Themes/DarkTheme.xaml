<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- THEME COLORS -->
    <Color x:Key="BackgroundColor">#FF1E1E1E</Color>
    <Color x:Key="ForegroundColor">#FFF0F0F0</Color>
    <Color x:Key="AccentColor">#FF4CAF50</Color>
    <Color x:Key="AccentHoverColor">#FF66BB6A</Color>
    <Color x:Key="AccentPressedColor">#FF388E3C</Color>
    <Color x:Key="ControlBackgroundColor">#FF2B2B2B</Color>
    <Color x:Key="ControlBorderColor">#FF555555</Color>

    <!-- BRUSHES -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{DynamicResource BackgroundColor}" />
    <SolidColorBrush x:Key="ForegroundBrush" Color="{DynamicResource ForegroundColor}" />
    <SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource AccentColor}" />
    <SolidColorBrush x:Key="AccentHoverBrush" Color="{DynamicResource AccentHoverColor}" />
    <SolidColorBrush x:Key="AccentPressedBrush" Color="{DynamicResource AccentPressedColor}" />
    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{DynamicResource ControlBackgroundColor}" />
    <SolidColorBrush x:Key="ControlBorderBrush" Color="{DynamicResource ControlBorderColor}" />

    <!-- WINDOW STYLE -->
    <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!-- TEXTBOX STYLE -->
    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource AccentBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
    </Style>

    <!-- TEXTBLOCK STYLE -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <!-- RICHTEXTBOX STYLE -->
    <Style TargetType="RichTextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
        <Setter Property="CaretBrush" Value="{DynamicResource AccentBrush}" />
    </Style>

    <!-- LISTBOX STYLE -->
    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <!-- LISTVIEW STYLE -->
    <Style TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <!-- BUTTON STYLE -->
    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6,3" />
        <Setter Property="Margin" Value="3" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentHoverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentPressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- COMBOBOX STYLE -->
    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="28"/>
                        </Grid.ColumnDefinitions>

                        <!-- Main border and selection -->
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"
                                SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="ContentSite"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              Margin="6,2,6,2"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"/>
                        </Border>

                        <!-- Dropdown arrow -->
                        <ToggleButton Grid.Column="1"
                                      x:Name="DropDownToggle"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="False"
                                      ClickMode="Press"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="0">
                            <Path Data="M 0 0 L 8 0 L 4 5 Z"
                                  Width="10" Height="6"
                                  Fill="{DynamicResource ForegroundBrush}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </ToggleButton>

                        <!-- Popup -->
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Border Background="{DynamicResource ControlBackgroundBrush}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="3"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer>
                                    <!-- This is the actual item host -->
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Background="{DynamicResource ControlBackgroundBrush}"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Popup" Property="MinHeight" Value="40"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- COMBOBOX ITEM STYLE -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Padding" Value="6,4" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentHoverBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentPressedBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>




    <!-- GRID STYLE -->
    <Style TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
    </Style>

    <!-- LABEL STYLE -->
    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

</ResourceDictionary>
